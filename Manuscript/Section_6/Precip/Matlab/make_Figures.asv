%mesh
loc = load('delLoc.txt');
tv = load('delTV.txt');
border = load('delBorder.txt');

% Covariates
cElev = load('delElev.txt');

%Parameters
n_weights = 1000;
n_locations = 50;

%Observations
%Use first percentage if using full observations
obs = load('delObs.txt');
oLoc = load('delOLoc.txt');
%obs = load("Observations/observations_"+n_locations+".txt");
%oLoc = load("Observation_locations/observation_locations_"+ n_locations+".txt");

%Prediction
pred_pc = load("prediction_on_mesh_pc.txt");
pred_not_pc = load("prediction_on_mesh_not_pc.txt");
pred_iso = load("prediction_on_mesh_iso.txt");
%pred_pc = load("Prediction_on_mesh/prediction_on_mesh_pc_w="+n_weights+"_loc="+n_locations+".txt");
%pred_not_pc = load("Prediction_on_mesh/prediction_on_mesh_not_pc_w="+n_weights+"_loc="+n_locations+".txt");
%pred_iso = load("Prediction_on_mesh/prediction_on_mesh_iso_w="+n_weights+"_loc="+n_locations+".txt");

%Mean
mean_pc = load("Posterior_mean\Posterior_mean_u_pc.txt");
mean_not_pc = load("Posterior_mean\Posterior_mean_u_EG.txt");
mean_iso = load("Posterior_mean\Posterior_mean_u_iso.txt");
% mean_pc = load("Posterior_mean\Posterior_mean_u_pc_w="+n_weights+"_loc="+n_locations+".txt");
% mean_not_pc = load("Posterior_mean\Posterior_mean_u_EG_w="+n_weights+"_loc="+n_locations+".txt");
% mean_iso = load("Posterior_mean\Posterior_mean_u_iso_w="+n_weights+"_loc="+n_locations+".txt");
%load("Posterior_mean\Posterior_mean_u_w=100_loc=20.txt")
% Scores

loo_PC = load("Scores\loo_error_list_PC.txt");
loo_EG = load("Scores\loo_error_list_EG.txt");
loo_ISO = load("Scores\loo_error_list_ISO.txt");
CRPS_PC = load("Scores\CRPS_list_PC.txt");
CRPS_EG = load("Scores\CRPS_list_EG.txt");
CRPS_ISO = load("Scores\CRPS_list_ISO.txt");
DSS_PC = load("Scores\DSS_list_PC.txt");
DSS_EG = load("Scores\DSS_list_EG.txt");
DSS_ISO = load("Scores\DSS_list_ISO.txt");
% loo_PC = load("Scores\loo_error_list_pc_w="+n_weights+"_loc="+n_locations+".txt");
% loo_EG = load("Scores\loo_error_list_EG_w="+n_weights+"_loc="+n_locations+".txt");
% loo_ISO = load("Scores\loo_error_list_ISO_w="+n_weights+"_loc="+n_locations+".txt");
% CRPS_PC = load("Scores\CRPS_list_pc_w="+n_weights+"_loc="+n_locations+".txt");
% CRPS_EG = load("Scores\CRPS_list_EG_w="+n_weights+"_loc="+n_locations+".txt");
% CRPS_ISO = load("Scores\CRPS_list_ISO_w="+n_weights+"_loc="+n_locations+".txt");
% DSS_PC = load("Scores\DSS_list_pc_w="+n_weights+"_loc="+n_locations+".txt");
% DSS_EG = load("Scores\DSS_list_EG_w="+n_weights+"_loc="+n_locations+".txt");
% DSS_ISO = load("Scores\DSS_list_ISO_w="+n_weights+"_loc="+n_locations+".txt");



% Get mask to remove sea
mask = makeSeaMask(loc, tv, border);

% Plot Prediction pc
hmm = figure;
pred_pc(mask == 0) = nan;
h = trisurf(tv, loc(:,1), loc(:,2), zeros(length(loc(:,1)), 1), pred_pc);
set(h, 'edgecolor', 'none')
set(gca, 'DataAspectRatio', [1, 1, 1]);
set(gca, 'FontSize', 14);
xlabel('Easting (km)', 'FontSize', 14)
ylabel('Northing (km)', 'FontSize', 14)
colorbar;
clim([0.35, 3.7])
view(0, 90);
hold on;
xlim([-170, 730]);
ylim([6350, 7550]);
shading interp;
plot(border(:,1), border(:,2), 'k');
print('-dpng', '-r300', '../figures/predPrecPc.png')
close(hmm)

% Plot Prediction not_pc
hmm = figure;

pred_not_pc(mask == 0) = nan;
h = trisurf(tv, loc(:,1), loc(:,2), zeros(length(loc(:,1)), 1), pred_not_pc);
set(h, 'edgecolor', 'none')
set(gca, 'DataAspectRatio', [1, 1, 1]);
set(gca, 'FontSize', 14);
xlabel('Easting (km)', 'FontSize', 14)
ylabel('Northing (km)', 'FontSize', 14)
colorbar;
clim([0.35, 3.7])
view(0, 90);
hold on;
xlim([-170, 730]);
ylim([6350, 7550]);
shading interp;
plot(border(:,1), border(:,2), 'k');
print('-dpng', '-r300', '../figures/predPrecNotPc.png')
close(hmm)

% Plot prediction iso
hmm = figure;
pred_iso(mask == 0) = nan;
h = trisurf(tv, loc(:,1), loc(:,2), zeros(length(loc(:,1)), 1), pred_iso);
set(h, 'edgecolor', 'none')
set(gca, 'DataAspectRatio', [1, 1, 1]);
set(gca, 'FontSize', 14);
xlabel('Easting (km)', 'FontSize', 14)
ylabel('Northing (km)', 'FontSize', 14)
colorbar;
clim([0.35, 3.7])
view(0, 90);
hold on;
xlim([-170, 730]);
ylim([6350, 7550]);
shading interp;
plot(border(:,1), border(:,2), 'k');
print('-dpng', '-r300', '../figures/predPrecIso.png')
close(hmm)

function create_surface_plot(tv, loc, border, mask, data, file_name, a, b)
    hmm = figure;
    data(mask == 0) = nan;
    h = trisurf(tv, loc(:,1), loc(:,2), zeros(length(loc(:,1)), 1), data);
    set(h, 'edgecolor', 'none')
    set(gca, 'DataAspectRatio', [1, 1, 1]);
    set(gca, 'FontSize', 14);
    xlabel('Easting (km)', 'FontSize', 14)
    ylabel('Northing (km)', 'FontSize', 14)
    colorbar;
    clim([a, b])
    view(0, 90);
    hold on;
    xlim([-170, 730]);
    ylim([6350, 7550]);
    shading interp;
    plot(border(:,1), border(:,2), 'k');
    print('-dpng', '-r300', file_name)
    close(hmm)
end

% Define the data and file paths
data = {mean_pc, mean_not_pc, mean_iso, mean_iso - mean_pc};
file_paths = {'../figures/post_mean_u_pc.png'; 
    '../figures/post_mean_u_not_pc.png';
    '../figures/post_mean_u_iso.png';
    '../figures/post_mean_u_diff_iso_pc.png'};

a= min(min(mean_pc,min(mean_not_pc,min(mean_iso, mean_iso - mean_pc))));
b= max(max(mean_pc,max(mean_not_pc,max(mean_iso, mean_iso - mean_pc))));

% Loop over the data and file paths
for k = 1:length(data)
    create_surface_plot(tv, loc, border, mask, data{k}, file_paths{k}, a, b);
end

% Plot elevation covariate
hmm = figure;
cElev(mask == 0) = nan;
h = trisurf(tv, loc(:,1), loc(:,2), zeros(length(loc(:,1)), 1), cElev);
set(h, 'edgecolor', 'none')
set(gca, 'DataAspectRatio', [1, 1, 1]);
set(gca, 'FontSize', 14);
xlabel('Easting (km)', 'FontSize', 14)
ylabel('Northing (km)', 'FontSize', 14)
colorbar;
view(0, 90);
hold on;
xlim([-170, 730]);
ylim([6350, 7550]);
shading interp;
plot(border(:,1), border(:,2), 'k');
ax = gca; % Get current axes
    outerpos = ax.OuterPosition;
    ti = ax.TightInset; 
    left = outerpos(1) + ti(1);
    bottom = outerpos(2) + ti(2);
    ax_width = outerpos(3) - ti(1) - ti(3);
    ax_height = outerpos(4) - ti(2) - ti(4);
    ax.Position = [left bottom ax_width ax_height];
print('-dpng', '-r300', '../figures/elevation_mesh.png')
close(hmm)


% Plot observations
hmm = figure;
scatter(oLoc(:,1), oLoc(:,2), 20, obs, 'filled');
hold on;
plot(border(:,1), border(:,2), 'k');
xlim([-150, 550]);
ylim([6400, 7300]);
set(gca, 'DataAspectRatio', [1 1 1]);
set(gca, 'FontSize', 14);
xlabel('Easting (km)', 'FontSize', 14);
ylabel('Northing (km)', 'FontSize', 14);
colorbar;
print('-dpng', '-r300', '../figures/observations.png');
close(hmm)

function create_point_plot(oLoc,  border,  data, file_name)
    hmm = figure;
    set(hmm, 'Position', [100, 100, 600, 600]);
    
    % Define colors
    blue = [0, 0, 1];
    light_blue = [0.5, 0.5, 1];
    light_gray = [0.5, 0.5, 0.5];
    light_red = [1, 0.5, 0.5];
    red = [1, 0, 0];
    
    % Create a diverging color map
    colormap([linspace(blue(1), light_blue(1), 128)' linspace(blue(2), light_blue(2), 128)' linspace(blue(3), light_blue(3), 128)';
              linspace(light_blue(1), light_gray(1), 30)' linspace(light_blue(2), light_gray(2), 30)' linspace(light_blue(3), light_gray(3), 30)';
              linspace(light_gray(1), light_red(1), 30)' linspace(light_gray(2), light_red(2), 30)' linspace(light_gray(3), light_red(3), 30)';
              linspace(light_red(1), red(1), 128)' linspace(light_red(2), red(2), 128)' linspace(light_red(3), red(3), 128)']);
    
    % Create a scatter plot
    scatter(oLoc(:,1), oLoc(:,2), 60, data, 'filled');
    
    % Set the color limits to be symmetric around zero
    clim([-max(abs(data(:))), max(abs(data(:)))]);
    
    hold on;
    plot(border(:,1), border(:,2), 'k');
    xlim([-150, 550]);
    ylim([6400, 7300]);
    set(gca, 'DataAspectRatio', [1 1 1]);
    set(gca, 'FontSize', 14);
    xlabel('Easting (km)', 'FontSize', 14);
    ylabel('Northing (km)', 'FontSize', 14);
    colorbar;

    ax = gca; % Get current axes
    outerpos = ax.OuterPosition;
    ti = ax.TightInset; 
    left = outerpos(1) + ti(1);
    bottom = outerpos(2) + ti(2);
    ax_width = outerpos(3) - ti(1) - ti(3);
    ax_height = outerpos(4) - ti(2) - ti(4);
    ax.Position = [left bottom ax_width ax_height];

    print('-dpng', '-r300', file_name);
    close(hmm)
end

% LOO differences
create_point_plot(oLoc,  border,  loo_ISO-loo_PC, '../figures/loo_diff_ISO_PC.png');
create_point_plot(oLoc,  border,  loo_ISO-loo_EG, '../figures/loo_diff_ISO_EG.png');
create_point_plot(oLoc,  border,  loo_EG-loo_PC, '../figures/loo_diff_EG_PC.png');

% CRPS differences
create_point_plot(oLoc,  border,  CRPS_ISO-CRPS_PC, '../figures/CRPS_diff_ISO_PC.png');
create_point_plot(oLoc,  border,  CRPS_ISO-CRPS_EG, '../figures/CRPS_diff_ISO_EG.png');
create_point_plot(oLoc,  border,  CRPS_EG-CRPS_PC, '../figures/CRPS_diff_EG_PC.png');

% DSS differences
create_point_plot(oLoc,  border,  DSS_ISO-DSS_PC, '../figures/DSS_diff_ISO_PC.png');
create_point_plot(oLoc,  border,  DSS_ISO-DSS_EG, '../figures/DSS_diff_ISO_EG.png');
create_point_plot(oLoc,  border,  DSS_EG-DSS_PC, '../figures/DSS_diff_EG_PC.png');


% %LOO diffferences
% create_point_plot(oLoc,  border,  loo_ISO-loo_PC, "../figures/loo_diff_ISO_PC_w="+n_weights+"_loc="+n_locations+".png")
% create_point_plot(oLoc,  border,  loo_ISO-loo_EG, "../figures/loo_diff_ISO_EG_w="+n_weights+"_loc="+n_locations+".png")
% create_point_plot(oLoc,  border,  loo_EG-loo_PC, "../figures/loo_diff_EG_PC_w="+n_weights+"_loc="+n_locations+".png")
% 
% %CRPS differences
% create_point_plot(oLoc,  border,  CRPS_ISO-CRPS_PC, "../figures/CRPS_diff_ISO_PC_w="+n_weights+"_loc="+n_locations+".png")
% create_point_plot(oLoc,  border,  CRPS_ISO-CRPS_EG, "../figures/CRPS_diff_ISO_EG_w="+n_weights+"_loc="+n_locations+".png")
% create_point_plot(oLoc,  border,  CRPS_EG-CRPS_PC, "../figures/CRPS_diff_EG_PC_w="+n_weights+"_loc="+n_locations+".png")
% %DSS differences
% create_point_plot(oLoc,  border,  DSS_ISO-DSS_PC, "../figures/DSS_diff_ISO_PC_w="+n_weights+"_loc="+n_locations+".png")
% create_point_plot(oLoc,  border,  DSS_ISO-DSS_EG, "../figures/DSS_diff_ISO_EG_w="+n_weights+"_loc="+n_locations+".png")
% create_point_plot(oLoc,  border,  DSS_EG-DSS_PC, "../figures/DSS_diff_EG_PC_w="+n_weights+"_loc="+n_locations+".png")



   
% Plot mesh
hmm = figure;
set(hmm, 'Position', [100, 100, 600, 600]);
h = trimesh(tv, loc(:,1), loc(:,2));
set(h, 'Color', 'black');
set(gca, 'DataAspectRatio', [1 1 1]);
set(gca, 'FontSize', 14);
xlabel('Easting (km)', 'FontSize', 14)
ylabel('Northing (km)', 'FontSize', 14)
hold on;
plot(border(:,1), border(:,2), 'k')
xlim([-500, 800]);
ylim([6100, 7550]);
print('-depsc2', '../figures/mesh.eps')
close(hmm);